boss.cpp

//ボスの行動制御
void boss_move() {
	if(boss[stage].flag==1) { //フラグがオンになっている間、出現する
		//ボスが出現
		//if(boss[stage].mv_state==-1) boss_appear();

		/*boss[stage].mv_state番目の行動が終わったら、次の行動へ移す
		if(boss[stage].mv_cnt2[boss[stage].mv_state]==boss[stage].mv_cnt[boss[stage].mv_state]) {
			boss[stage].mv_cnt2[boss[stage].mv_state]=0;//カウントを0に戻す
			int mv_ptn=boss[stage].mv_ptn[boss[stage].mv_state];
			int atk_ptn=boss[stage].atk_ptn[boss[stage].mv_state];

			boss[stage].mv_state++;//次の行動に移す
			//行動パターンを最初に戻す(行動を循環させる)
			if(	mv_ptn==-1 || boss[stage].mv_state==BOSS_PATTERN_MAX)
				boss[stage].mv_state=0;
			
			if(atk_ptn==2 || atk_ptn==7) {//攻撃パターンがビームなら
				boss_beam_regist(stage);  //ビームを登録
			} else {					  //それ以外なら
				boss_shot_regist(stage);  //ショットを登録
			}
		}*/

		/*ボスが所定の位置についたら行動・攻撃を開始
		if(boss[stage].mv_state==-1 && boss[stage].y>=Y_BOSS) {
			boss[stage].mv_state=0;
		}*/
		

		/*if(boss[stage].mv_state==-1) {//ボス出現
			//物理計算
			if(boss[stage].phy.flag==1) calc_phy();
			if(boss[stage].y==Y_BOSS) {
				boss[stage].mv_state=0;
			}
		} else */if(boss[stage].mv_state!=-1) { //ボスの出現後の行動
			boss_act_pattern[boss[stage].mv_ptn[boss[stage].mv_state]](stage);
			boss[stage].x+=boss[stage].vx;
			boss[stage].y+=boss[stage].vy;
			boss[stage].cnt++;
			boss[stage].mv_cnt2[boss[stage].mv_state]++;

			//boss[stage].mv_state番目の行動が終わったら、次の行動へ移す
			if(boss[stage].mv_cnt2[boss[stage].mv_state]==boss[stage].mv_cnt[boss[stage].mv_state]) {
				int mv_ptn;
				int atk_ptn;
				boss[stage].mv_cnt2[boss[stage].mv_state]=0;//カウントを0に戻す
				boss[stage].mv_state++;//次の行動に移す
				mv_ptn=boss[stage].mv_ptn[boss[stage].mv_state];

				//行動パターンを最初に戻す(行動を循環させる)
				if(mv_ptn==-1 || boss[stage].mv_state==BOSS_PATTERN_MAX) {
					boss[stage].mv_state=0;
				}

				atk_ptn=boss[stage].atk_ptn[boss[stage].mv_state];
				if(atk_ptn==2 || atk_ptn==7) {		 //攻撃パターンがビームなら
					boss_beam_regist(stage);		 //ビームを登録
				} else if(atk_ptn!=2 && atk_ptn!=7){ //それ以外なら
					boss_shot_regist(stage);		 //ショットを登録
				}

				//物理計算
				//if(boss[stage].phy.flag==1) calc_phy();

				//ボスのHPが0以下になったら消す
				if(boss[stage].hp<=0) boss[stage].flag=0;
			}

			//物理計算
			//if(boss[stage].phy.flag==1) calc_phy();

			//ボスのHPが0以下になったら消す
			//if(boss[stage].hp<=0) boss[stage].flag=0;
		}

		//物理計算
		if(boss[stage].phy.flag==1) calc_phy();

		//ボスが所定の位置についたら行動・攻撃を開始
		//if(boss[stage].mv_state==-1 && boss[stage].y>=Y_BOSS) {
			//boss[stage].mv_state=0;
		//}

		//所定位置についてからカウントする
		//if(boss[stage].mv_state!=-1) boss[stage].cnt++;
	}
}

/カウンタ,x座標,y座標,スピード,待機時間,体力,パワー,行動0,1,2,3,4,5,6,7,8,9,10,11,行動カウント0,1,2,3,4,5,6,7,8,9,10,11,攻撃0,1,2,3,4,5,6,7,8,9,10,11
/cnt,x,y,sp,wait,hp,power,mv_ptn0,1,2,3,4,5,6,7,8,9,10,11,mv_cnt0,1,2,3,4,5,6,7,8,9,10,11,atk_ptn0,1,2,3,4,5,6,7,8,9,10,11
100,320,-40,2.3,50,500,20,0,1,1,1,0,0,0,1,5,5,-1,-1,300,200,200,200,200,300,300,200,300,300,-1,-1,0,3,7,4,2,2,2,3,5,6,-1,-1
